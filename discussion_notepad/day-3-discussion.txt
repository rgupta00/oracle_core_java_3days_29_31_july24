Java Programming (3 days)
======================
Day 3:
-------
Collections: aka readymade ds in java
	List: allow duplicate
		ArrayList, LinkedList, Vector (X)
		
	set: dont allow duplicate
		HashSet
		LinkedHashSet
		TreeSet
		
	Map: k--> v
		HashMap
		LinkedHashMap
		TreeMap
		
introduction to generics <>
	provide type safty to the data

Multithreading Concurrency
-------------------------
	what is threads
	OS and process and threads
	how to create threads in java
	various way to create the threads in java
	thread life cycle
	synchronization 
	dead lock, how to avoide dead lock
	p and c problem
	
	modern java threads api: java util concurrent package
						juc: lib: many modern method
						
						
						
	Ex1: basics of threads:
--------------------------------
package com.threads.session1.classical_threads;
//Job and worker analogy
//Thread(object of thraeds act as worker) and Runnable(aka job)

class Job implements Runnable{
	@Override
	public void run() {
		System.out.println("job of thread stated: "+ Thread.currentThread().getName());
		try {
			Thread.sleep(1200);
		}catch(InterruptedException e) {}
		System.out.println("job of thread done: "+ Thread.currentThread().getName());
	}
	
}

public class A_HelloWorld {
    public static void main(String[] args) {
    	System.out.println("Main job of thread: "+ Thread.currentThread().getName());
    	
    	Job job=new Job();
    	Thread thread=new Thread(job , "a");
    	Thread thread2=new Thread(job , "b");
    	Thread thread3=new Thread(job , "c");
    	
    	
    	thread.start();//never call run() directly? 
    	//thread.start();
    	thread2.start();
    	thread3.start();
    	
    	//how to ensure that main thrad should finished to end: orphan threads
    	try {
    		thread.join();
    		thread2.join();
    		thread3.join();
    	}catch(InterruptedException e) {}
    	
    	System.out.println("Main job of thread done : "+ Thread.currentThread().getName());
    }
}

	
						
Q> how to handle exception in threads?
------------------------------------
	
						
						
						
						
						
						
						
						


Introduction to JUC


thread , runniable, wait notify... : classical threads
main problem in classical thread:
	it is complicated to solve common issues
	Runnable: void , ex 
	
in java 5: new packagge 
	java util concurrent package
	modern way of dealing with threads
	
	Thread pool: jvm
	Callable vs Runnable
	ds changes: thread safe ds
	
	t1		LL
	t2
	https://www.oreilly.com/library/view/hands-on-high-performance/9781788838382/52562b0a-045e-4c2d-b89b-bae91972634f.xhtml
	
	
	Intro to TP Thread pool
	https://medium.com/@erayaraz10/a-comprehensive-guide-to-thread-pools-in-java-75a06657fda
	
	job:
		cpu bound process: algo
		IO bound process
		?
		
	
	
	
	
	
	





	
Jdbc ( java database connectivity)
-----------------------------------
DBA: SQL


		curd (c u r d)
java-------------------------------->DB

	driver jdbc: aka translator java and db
	
	db vendors:
	---------
	mysql: mysql connector j
	oracle: diff driver
	...
	...

Jdbc ( Java DataBase Connectivity)

hindi	------------------------------ franch
			english


https://www.youtube.com/playlist?list=PLv2-IhRmhbyS1HDuE0XR6UMJr7Wlvx1CC




















java 8 stream processing
in java 8: declartive data processing using streams




